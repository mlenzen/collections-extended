name: Python package

on: [push, pull_request]

jobs:

  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: make deps

    - name: Build package
      run: poetry build

  docs:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: make deps

    - name: Build Docs
      run: poetry run make docs

    - uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs/_build/html

  docs-publish:

    runs-on: ubuntu-latest
    needs: docs
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Download docs artifact
        uses: actions/download-artifact@v2
        with:
          name: docs
          path: docs/_build/html
      - name: Replace docs
        run: |
          git rm -r .
          git reset HEAD .nojekyll CNAME .gitignore
          git checkout -- .nojekyll CNAME .gitignore
          cp -r docs/_build/html/* .
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m 'Triggered by ${{ env.GITHUB_SHA }}'
      - name: Push changes
        uses: ad-m/github-push-action@v0.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages

  lint:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: make deps

    - name: Lint with flake8
      run: make lint
    - name: Check for unfinished code
      run: make fixme-check

  tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', pypy-3.6, pypy-3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: make deps

    - name: Test with pytest
      run: poetry run coverage run --source collections_extended -m pytest

#  coverage:
#
#    runs-on: ubuntu-latest
#
#    needs: tests
#    env:
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.9
#    - name: Install dependencies
#      run: |
#        pip install --upgrade pip setuptools coveralls
#        pip install -r requirements.txt
#
#    - name: Upload Coverage Results
#      run: coveralls

#    after_success:
#    - coveralls
